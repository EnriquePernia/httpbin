# secure-httpbin-deployment.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: httpbin-secure
  labels:
    name: httpbin-secure

---
# Resource Quota for the namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: httpbin-resource-quota
  namespace: httpbin-secure
spec:
  hard:
    # Limit total resources in namespace
    requests.cpu: "1"
    requests.memory: 1Gi
    limits.cpu: "2"
    limits.memory: 2Gi
    pods: "10"

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: httpbin-secure-sa
  namespace: httpbin-secure

---
# Network Policy - Allow HTTPBin traffic from ingress
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: httpbin-network-policy
  namespace: httpbin-secure
spec:
  podSelector:
    matchLabels:
      app: httpbin-secure
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow traffic from Traefik in kube-system namespace
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
    ports:
    - protocol: TCP
      port: 80
  
  # Also allow traffic from pods with Traefik labels
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: traefik
    ports:
    - protocol: TCP
      port: 80
  
  # Allow traffic within same namespace
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: httpbin-secure
    ports:
    - protocol: TCP
      port: 80
  
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow outbound HTTP/HTTPS for app functionality
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443

---
# HTTPBin Deployment with moderate security
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin-secure
  namespace: httpbin-secure
  labels:
    app: httpbin-secure
spec:
  replicas: 3
  selector:
    matchLabels:
      app: httpbin-secure
  template:
    metadata:
      labels:
        app: httpbin-secure
    spec:
      # Distribution across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - httpbin-secure
              topologyKey: kubernetes.io/hostname
      
      # Use custom service account
      serviceAccountName: httpbin-secure-sa
      
      # Basic security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      
      containers:
      - name: httpbin
        image: kennethreitz/httpbin:latest
        imagePullPolicy: Always
        
        # Container security (moderate restrictions)
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # Keep writable for httpbin compatibility
          capabilities:
            drop:
            - ALL
        
        # Resource limits
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        
        ports:
        - containerPort: 80  # Keep original port 80
          name: http
          protocol: TCP

        startupProbe:
          httpGet:
            path: /status/200
            port: 80
          failureThreshold: 30
          periodSeconds: 10

        livenessProbe:
          httpGet:
            path: /status/200
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30

        readinessProbe:
          httpGet:
            path: /status/200
            port: 80
          failureThreshold: 3
          successThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: httpbin-secure-hpa    
  namespace: httpbin-secure   
spec:
  scaleTargetRef:
    apiVersion: apps/v1   
    kind: Deployment       
    name: httpbin-secure   
  minReplicas: 3       
  maxReplicas: 10        
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: httpbin-secure-service
  namespace: httpbin-secure
  labels:
    app: httpbin-secure
spec:
  selector:
    app: httpbin-secure  # Make sure this matches deployment labels
  ports:
  - port: 80
    targetPort: 80  # Match container port
    protocol: TCP
    name: http
  type: ClusterIP

---
# Ingress with basic security
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpbin-secure-ingress
  namespace: httpbin-secure
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
  # Accept any host (remove host restriction for easier testing)
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: httpbin-secure-service
            port:
              number: 80